pipeline {
    agent {
        label 'agent-1'
    }
    options {
        // Timeout counter starts BEFORE agent is allocated
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
        // retry(1)
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'as-creds') {
                    sh """
                        cd 20-sg
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('apply or destroy') {
            input {
                message "Should we continue? to ${params.ACTION}"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'as-creds') {
                    sh """
                        cd 20-sg
                        if [ "${params.ACTION}" == "apply" ]
                         then
                            terraform apply -auto-approve tfplan
                        elif [ "${params.ACTION}" == "destroy" ]
                         then
                            terraform destroy -auto-approve
                        fi
                    """
                }
            }
        }
        // stage('Trigger sg') {
        //      when {
        //         expression { params.ACTION == 'apply' }
        //     }
        //     steps{
        //         build job: '20-sg', parameters: [string(name: 'ACTION', value: "apply")], wait: false
        //     }
        
        //     }
        
    }

    post {
        always {
            echo "this section runs always"
            deleteDir()
        }

        success {
            echo "this section runs when pipeline success"
        }

        failure {
            echo "this section runs when pipeline fails"
        }
    }
}
